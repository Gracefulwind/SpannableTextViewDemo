apply plugin: 'com.android.library'
//apply plugin: 'com.novoda.bintray-release'
apply plugin: "guru.stefma.bintrayrelease"

def getVersionCode(){
    return 102
}

def getVersionName(){
    return "1.0.2"
}
android {
    compileSdkVersion 27



    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode getVersionCode()
        versionName getVersionName()

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

//publish {
//    artifactId = 'SpannableTextView'
//    uploadName = 'WD-SpannableTextView'
//    userOrg = rootProject.userOrg
//    groupId = rootProject.groupId
//    publishVersion = rootProject.publishVersion
//    desc = rootProject.description
//    website = rootProject.website
//    licences = rootProject.licences
//}
tasks.withType(Javadoc) {
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}

//def version_name(){
//    return versionName
//}
version = getVersionName()
group = "com.gracefulwind"
publish {
    userOrg = 'gracefulwind'
    artifactId = 'SpannableTextView'
    desc = 'A spannable textview with link can be managed by user'
    website = 'https://github.com/Gracefulwind/SpannableTextViewDemo'
}